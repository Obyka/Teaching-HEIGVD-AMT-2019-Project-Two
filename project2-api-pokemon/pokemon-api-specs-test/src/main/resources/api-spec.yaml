swagger: '2.0'
info:
  version: '0.1.0'
  title: API Pokemon
  description: An API to manage Pokemon
host: localhost:8080
basePath: /api/pokemon
schemes:
  - http
paths:
  /pokemons:
    get:
      description: get the list of all pokemons
      operationId: getPokemons
      produces:
        - application/json
      parameters:
        - name: page
          default: 0
          in: query
          type: integer
          description: The page number to get
        - name: size
          default: 20
          in: query
          type: integer
          description: The size of a page
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Pokemon'

    delete:
      operationId: deletePokemons
      description: delete the list of all pokemons
      responses:
        204:
          description: sucessfully deleted

    post:
      description: create a pokemon
      operationId: createPokemon
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: pokemon
          in: body
          required: true
          schema:
            $ref: '#/definitions/PokemonPut'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Pokemon'
        '400':
          description: Bad request

  /pokemons/{id}:
    get:
      description: get a pokemon by its ID
      operationId: getPokemonByID
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/Pokemon'
        '404':
          description: pokemon not found
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID

    delete:
      description: delete a pokemon by its ID
      operationId: deletePokemonByID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID
      responses:
        204:
          description: sucessfully deleted
        '404':
          description: Not found

    put:
      description: update a pokemon by its ID
      operationId: updatePokemonByID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID
        - name: pokemon
          in: body
          required: true
          schema:
            $ref: '#/definitions/PokemonPut'
      responses:
        200:
          description: success
        '404':
          description: Not found

  /trainers:
    get:
      description: get the list of all trainers
      operationId: getTrainers
      produces:
        - application/json
      parameters:
        - name: page
          default: 0
          in: query
          type: integer
          description: The page number to get
        - name: size
          default: 20
          in: query
          type: integer
          description: The size of a page
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/TrainerWithId'

    delete:
      operationId: deleteTrainers
      description: delete the list of all trainers
      responses:
        204:
          description: sucessfully deleted

    post:
      description: create a trainer
      operationId: createTrainer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: trainer
          in: body
          required: true
          schema:
            $ref: '#/definitions/TrainerPut'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/TrainerWithId'
        '400':
          description: Bad request

  /trainers/{id}:
    get:
      description: get a trainer by its ID
      operationId: getTrainerById
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/TrainerWithId'
        '404':
          description: Not found
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The trainer ID

    delete:
      description: delete a trainer by its ID
      operationId: deleteTrainerById
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The trainer ID
      responses:
        204:
          description: sucessfully deleted
        '404':
          description: Not found

    put:
      description: update a trainer by its ID
      operationId: updateTrainerById
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The trainer ID
        - name: trainer
          in: body
          required: true
          schema:
            $ref: '#/definitions/TrainerPut'
      responses:
        200:
          description: success
        '404':
          description: Not found

  /captures:
    post:
      description: create a capture
      operationId: createCapture
      consumes:
        - application/json
      parameters:
        - name: capture
          in: body
          required: true
          schema:
            $ref: '#/definitions/CapturePost'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/CaptureGet'
        '400':
          description: Bad request

  /captures/trainers/{id_trainer}:
    get:
      description: Get a specific trainer with his all pokemons
      operationId: getTrainerWithPokemons
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/CaptureGet'
        '404':
          description: Not found
      parameters:
        - in: path
          name: id_trainer
          required: true
          type: integer
          description: trainer ID
        - name: page
          default: 0
          in: query
          type: integer
          description: The page number to get
        - name: size
          default: 20
          in: query
          type: integer
          description: The size of a page

  /captures/pokemons/{id_pokemon}:
    get:
      description : Get a specific pokemon with his all trainers
      operationId: getPokemonWithTrainers
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/CaptureGet'
        '404':
          description: Not found
      parameters:
        - in: path
          name: id_pokemon
          required: true
          type: integer
          description: pokemon ID
        - name: page
          default: 0
          in: query
          type: integer
          description: The page number to get
        - name: size
          default: 20
          in: query
          type: integer
          description: The size of a page

definitions:
  Pokemon:
    allOf:
      - type: object
        required:
          - idUser
        properties:
          idUser:
            type: integer
      - $ref: '#/definitions/PokemonPut'

  PokemonPut:
    type: object
    properties:
      pokedexId:
        type: integer
      name:
        type: string
      type:
        type: string
      category:
        type: string
      height:
        type: integer
      hp:
        type: integer

  Trainer:
    allOf:
      - type: object
      - $ref: '#/definitions/TrainerPut'

  TrainerWithId:
    allOf:
      - type: object
        required:
          - id
          - idUser
        properties:
          id:
            type: integer
          idUser:
            type: integer
      - $ref: '#/definitions/TrainerPut'

  TrainerPut:
    type: object
    properties:
      name:
        type: string
      surname:
        type: string
      gender:
        type: string
      age:
        type: integer
      numberOfBadges:
        type: integer

  CapturePost:
    type: object
    properties:
      idPokemon:
        type: integer
      idTrainer:
        type: integer
      dateCapture:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'

  CaptureGet:
    allOf:
      - type: object
        required:
          - idUser
          - idCapture
        properties:
          idUser:
            type: integer
          idCapture:
            type: integer
      - $ref: '#/definitions/CapturePost'
