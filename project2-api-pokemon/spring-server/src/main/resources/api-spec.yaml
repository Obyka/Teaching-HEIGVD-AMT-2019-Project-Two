swagger: '2.0'
info:
  version: '0.1.0'
  title: API Pokemon
  description: An API to manage Pokemon
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /pokemons:
    get:
      description: get the list of all pokemons
      operationId: getPokemons
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          type: string
          description: name of the pokemon to return
        - in: query
          name: type
          type: string
          description: type of the pokemon to return
        - in: query
          name: category
          type: string
          description: category of the pokemon to return
        - in: query
          name: height
          type: integer
          description: height of the pokemon to return
        - in: query
          name: hp
          type: integer
          description: hp of the pokemon to return
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Pokemon'

    delete:
      operationId: deletePokemons
      description: delete the list of all pokemons
      parameters:
        - in: query
          name: name
          type: string
          description: name of the pokemon to delete
        - in: query
          name: type
          type: string
          description: type of the pokemon to delete
        - in: query
          name: category
          type: string
          description: category of the pokemon to delete
        - in: query
          name: height
          type: integer
          description: height of the pokemon to delete
        - in: query
          name: hp
          type: integer
          description: hp of the pokemon to delete
      responses:
        204:
          description: sucessfully deleted

    post:
      description: create a pokemon
      operationId: createPokemon
      consumes:
        - application/json
      parameters:
        - name: pokemon
          in: body
          required: true
          schema:
            $ref: '#/definitions/Pokemon'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/Pokemon'
        '400':
          description: Bad request

  /pokemons/{id}:
    get:
      description: get a pokemon by its ID
      operationId: getPokemonByID
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/Pokemon'
        '404':
          description: pokemon not found
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID

    delete:
      description: delete a pokemon by its ID
      operationId: deletePokemonByID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID
      responses:
        204:
          description: sucessfully deleted
        '404':
          description: Not found

    put:
      description: update a pokemon by its ID
      operationId: updatePokemonByID
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID
        - name: pokemon
          in: body
          required: true
          schema:
            $ref: '#/definitions/Pokemon'
      responses:
        200:
          description: success
        '404':
          description: Not found

  /trainers:
    get:
      description: get the list of all trainers
      operationId: getTrainers
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          type: string
          description: name of the trainer to return
        - in: query
          name: surname
          type: string
          description: surname of the trainer to return
        - in: query
          name: gender
          type: string
          description: gender of the trainer to return
        - in: query
          name: age
          type: integer
          description: age of the trainer to return
        - in: query
          name: numberOfBadges
          type: integer
          description: number of badges of the trainer to return
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/TrainerWithId'

    delete:
      operationId: deleteTrainers
      description: delete the list of all trainers
      parameters:
        - in: query
          name: name
          type: string
          description: name of the trainer to delete
        - in: query
          name: surname
          type: string
          description: surname of the trainer to delete
        - in: query
          name: gender
          type: string
          description: gender of the trainer to delete
        - in: query
          name: age
          type: integer
          description: age of the trainer to delete
        - in: query
          name: numberOfBadges
          type: integer
          description: number of badges of the trainer to delete
      responses:
        204:
          description: sucessfully deleted

    post:
      description: create a trainer
      operationId: createTrainer
      consumes:
        - application/json
      parameters:
        - name: trainer
          in: body
          required: true
          schema:
            $ref: '#/definitions/Trainer'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/TrainerWithId'
        '400':
          description: Bad request

  /trainers/{id}:
    get:
      description: get a trainer by its ID
      operationId: getTrainerById
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/TrainerWithId'
        '404':
          description: Not found
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The trainer ID

    delete:
      description: delete a trainer by its ID
      operationId: deleteTrainerById
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The trainer ID
      responses:
        204:
          description: sucessfully deleted
        '404':
          description: Not found

    put:
      description: update a trainer by its ID
      operationId: updateTrainerById
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The pokemon ID
        - name: pokemon
          in: body
          required: true
          schema:
            $ref: '#/definitions/Trainer'
      responses:
        200:
          description: success
        '404':
          description: Not found

  /captures:
    post:
      description: create a capture
      operationId: createCapture
      consumes:
        - application/json
      parameters:
        - name: capture
          in: body
          required: true
          schema:
            $ref: '#/definitions/Capture'
      responses:
        '201':
          description: created
          schema:
            $ref: '#/definitions/CaptureWithId'
        '400':
          description: Bad request

  /captures/trainers/{id_trainer}:
    get:
      description: Get a specific trainer with his all pokemons
      operationId: getTrainerWithPokemons
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/CaptureTrainerPokemons'
        '404':
          description: Not found
      parameters:
        - in: path
          name: id_trainer
          required: true
          type: integer
          description: trainer ID

  /captures/pokemons/{id_pokemon}:
    get:
      description : Get a specific pokemon with his all trainers
      operationId: getPokemonWithTrainers
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/CapturePokemonTrainers'
        '404':
          description: Not found
      parameters:
        - in: path
          name: id_pokemon
          required: true
          type: integer
          description: pokemon ID

definitions:
  Pokemon:
    type: object
    properties:
      pokedexId:
        type: integer
      name:
        type: string
      type:
        type: string
      category:
        type: string
      height:
        type: integer
      hp:
        type: integer

  Trainer:
    type: object
    properties:
      name:
        type: string
      surname:
        type: string
      gender:
        type: string
      age:
        type: integer
      numberOfBadges:
        type: integer

  TrainerWithId:
    type: object
    properties:
      id:
        type: integer
    allOf:
      - $ref: '#/definitions/Trainer'

  Capture:
    type: object
    properties:
      idTrainer:
        type: integer
      pokemons:
        type: array
        items:
          $ref: '#/definitions/CapturePokemon'

  CaptureWithId:
    type: object
    properties:
      id:
        type: integer
    allOf:
      - $ref: '#/definitions/Capture'

  CapturePokemon:
    type: object
    properties:
      idPokemon:
        type: integer
      dateCapture:
        type: string
        format: date-time

  CaptureTrainer:
    type: object
    properties:
      idTrainer:
        type: integer
      dateCapture:
        type: string
        format: date-time

  CaptureTrainerPokemons:
    type: object
    properties:
      id:
        type: integer
    allOf:
      - $ref: '#/definitions/Capture'

  CapturePokemonTrainers:
    type: object
    properties:
      id:
        type: integer
      idPokemon:
        type: integer
      trainers:
        type: array
        items:
          $ref: '#/definitions/CaptureTrainer'